{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Desktop/hackathon3/client/src/components/UpdateAvatarForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAvatar, deleteAvatar } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport generateBase64Encode from '../utils/genBase64Encode';\nimport AlertMessage from './AlertMessage';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Button, useMediaQuery, IconButton, Typography } from '@material-ui/core';\nimport { useAvatarFormStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport FaceIcon from '@material-ui/icons/Face';\n\nconst UpdateAvatarForm = ({\n  closeModal\n}) => {\n  _s();\n\n  var _user$avatar, _user$avatar2;\n\n  const classes = useAvatarFormStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state);\n  const [avatarInput, setAvatarInput] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    setFileName(file.name);\n    generateBase64Encode(file, setAvatarInput, true);\n  };\n\n  const clearfileSelection = () => {\n    setAvatarInput('');\n    setFileName('');\n  };\n\n  const handleAvatarUpload = async () => {\n    if (avatarInput === '') {\n      return setError('Select an image file first.');\n    }\n\n    try {\n      setIsLoading(true);\n      await dispatch(setAvatar(avatarInput));\n      setIsLoading(false);\n      dispatch(notify('Successfully updated the avatar!', 'success'));\n      setAvatarInput('');\n      setFileName('');\n      closeModal();\n    } catch (err) {\n      setIsLoading(false);\n      setError(getErrorMsg(err), 'error');\n    }\n  };\n\n  const handleRemoveAvatar = async () => {\n    try {\n      await dispatch(deleteAvatar());\n      dispatch(notify('Removed avatar.', 'success'));\n    } catch (err) {\n      setError(getErrorMsg(err), 'error');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, (user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.exists) && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imagePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: user.username + '-avatar',\n    src: user.avatar.imageLink,\n    width: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.currentAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"secondary\",\n    className: classes.currentAvatarText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Current Avatar\"), /*#__PURE__*/React.createElement(DeleteDialog, {\n    type: \"avatar\",\n    handleDelete: handleRemoveAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageBtnsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image-upload\",\n    accept: \"image/*\",\n    hidden: true,\n    onChange: handleFileInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    component: \"label\",\n    htmlFor: \"image-upload\",\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    startIcon: avatarInput ? /*#__PURE__*/React.createElement(CheckCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(PublishIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 58\n      }\n    }),\n    className: classes.selectBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, avatarInput ? `${isMobile ? '' : 'Selected '}\"${fileName}\"` : `Select Image`), avatarInput && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: clearfileSelection,\n    color: \"secondary\",\n    size: isMobile ? 'small' : 'medium',\n    className: classes.clearSelectionBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }))), avatarInput && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imagePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: fileName,\n    src: avatarInput,\n    width: isMobile ? 250 : 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: isMobile ? 'medium' : 'large',\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.submitButton,\n    fullWidth: true,\n    startIcon: /*#__PURE__*/React.createElement(FaceIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }\n    }),\n    onClick: handleAvatarUpload,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, (user === null || user === void 0 ? void 0 : (_user$avatar2 = user.avatar) === null || _user$avatar2 === void 0 ? void 0 : _user$avatar2.exists) ? isLoading ? 'Updating' : 'Update avatar' : isLoading ? 'Adding' : 'Add avatar'), /*#__PURE__*/React.createElement(AlertMessage, {\n    error: error,\n    severity: \"error\",\n    clearError: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(UpdateAvatarForm, \"BrPSqDgnVLJbDb7YnRnKUd0gNzg=\", false, function () {\n  return [useAvatarFormStyles, useTheme, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = UpdateAvatarForm;\nexport default UpdateAvatarForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAvatarForm\");","map":{"version":3,"sources":["/home/wilder/Desktop/hackathon3/client/src/components/UpdateAvatarForm.js"],"names":["React","useState","useSelector","useDispatch","setAvatar","deleteAvatar","notify","DeleteDialog","generateBase64Encode","AlertMessage","getErrorMsg","Button","useMediaQuery","IconButton","Typography","useAvatarFormStyles","useTheme","PublishIcon","CheckCircleIcon","CancelIcon","FaceIcon","UpdateAvatarForm","closeModal","classes","theme","isMobile","breakpoints","down","dispatch","user","state","avatarInput","setAvatarInput","fileName","setFileName","isLoading","setIsLoading","error","setError","handleFileInputChange","e","file","target","files","name","clearfileSelection","handleAvatarUpload","err","handleRemoveAvatar","avatar","exists","imagePreview","username","imageLink","currentAvatar","currentAvatarText","imageBtnsWrapper","selectBtn","clearSelectionBtn","submitButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAvatar, deleteAvatar } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport generateBase64Encode from '../utils/genBase64Encode';\nimport AlertMessage from './AlertMessage';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Button,\n  useMediaQuery,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { useAvatarFormStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport FaceIcon from '@material-ui/icons/Face';\n\nconst UpdateAvatarForm = ({ closeModal }) => {\n  const classes = useAvatarFormStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state);\n  const [avatarInput, setAvatarInput] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    setFileName(file.name);\n    generateBase64Encode(file, setAvatarInput, true);\n  };\n\n  const clearfileSelection = () => {\n    setAvatarInput('');\n    setFileName('');\n  };\n\n  const handleAvatarUpload = async () => {\n    if (avatarInput === '') {\n      return setError('Select an image file first.');\n    }\n\n    try {\n      setIsLoading(true);\n      await dispatch(setAvatar(avatarInput));\n      setIsLoading(false);\n\n      dispatch(notify('Successfully updated the avatar!', 'success'));\n      setAvatarInput('');\n      setFileName('');\n      closeModal();\n    } catch (err) {\n      setIsLoading(false);\n      setError(getErrorMsg(err), 'error');\n    }\n  };\n\n  const handleRemoveAvatar = async () => {\n    try {\n      await dispatch(deleteAvatar());\n      dispatch(notify('Removed avatar.', 'success'));\n    } catch (err) {\n      setError(getErrorMsg(err), 'error');\n    }\n  };\n\n  return (\n    <div>\n      {user?.avatar?.exists && (\n        <div>\n          <div className={classes.imagePreview}>\n            <img\n              alt={user.username + '-avatar'}\n              src={user.avatar.imageLink}\n              width={150}\n            />\n          </div>\n          <div className={classes.currentAvatar}>\n            <Typography\n              variant=\"h6\"\n              color=\"secondary\"\n              className={classes.currentAvatarText}\n            >\n              Current Avatar\n            </Typography>\n            <DeleteDialog type=\"avatar\" handleDelete={handleRemoveAvatar} />\n          </div>\n        </div>\n      )}\n      <div className={classes.imageBtnsWrapper}>\n        <input\n          type=\"file\"\n          id=\"image-upload\"\n          accept=\"image/*\"\n          hidden\n          onChange={handleFileInputChange}\n        />\n        <Button\n          component=\"label\"\n          htmlFor=\"image-upload\"\n          variant=\"outlined\"\n          color=\"primary\"\n          fullWidth\n          startIcon={avatarInput ? <CheckCircleIcon /> : <PublishIcon />}\n          className={classes.selectBtn}\n        >\n          {avatarInput\n            ? `${isMobile ? '' : 'Selected '}\"${fileName}\"`\n            : `Select Image`}\n        </Button>\n        {avatarInput && (\n          <IconButton\n            onClick={clearfileSelection}\n            color=\"secondary\"\n            size={isMobile ? 'small' : 'medium'}\n            className={classes.clearSelectionBtn}\n          >\n            <CancelIcon />\n          </IconButton>\n        )}\n      </div>\n      {avatarInput && (\n        <div className={classes.imagePreview}>\n          <img alt={fileName} src={avatarInput} width={isMobile ? 250 : 350} />\n        </div>\n      )}\n      <Button\n        size={isMobile ? 'medium' : 'large'}\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.submitButton}\n        fullWidth\n        startIcon={<FaceIcon />}\n        onClick={handleAvatarUpload}\n        disabled={isLoading}\n      >\n        {user?.avatar?.exists\n          ? isLoading\n            ? 'Updating'\n            : 'Update avatar'\n          : isLoading\n          ? 'Adding'\n          : 'Add avatar'}\n      </Button>\n      <AlertMessage\n        error={error}\n        severity=\"error\"\n        clearError={() => setError(null)}\n      />\n    </div>\n  );\n};\n\nexport default UpdateAvatarForm;\n"]},"metadata":{},"sourceType":"module"}