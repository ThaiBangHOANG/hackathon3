{"ast":null,"code":"var _jsxFileName = \"/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { notify } from '../reducers/notificationReducer';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport getEditedThumbail from '../utils/cloudinaryTransform';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Paper, Typography, useMediaQuery, CardMedia, Link, Button } from '@material-ui/core';\nimport { useCardStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LinkIcon from '@material-ui/icons/Link';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst PostCard = ({\n  post,\n  toggleUpvote,\n  toggleDownvote\n}) => {\n  _s();\n\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    commentCount,\n    createdAt,\n    updatedAt\n  } = post;\n  const classes = useCardStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const {\n    user,\n    darkMode\n  } = useSelector(state => state);\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const linkToShow = postType === 'Link' ? linkSubmission : postType === 'Image' ? imageSubmission.imageLink : '';\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: '1px solid #1dbf73',\n      borderRadius: '15px',\n      marginBottom: '20px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '80%',\n      display: 'flex',\n      textAligne: 'center',\n      justifyContent: 'space-around'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '70px',\n      height: '70px',\n      borderRadius: '100%'\n    },\n    src: \"https://99designs-blog.imgix.net/blog/wp-content/uploads/2018/09/fiverr-2018.png \",\n    alt: \" \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), ' '), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \" Project \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, ' ', post.author.username, \" \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 36\n    }\n  }, \"Date : \", post.createdAt, \" \"), ' ', console.log(post), ' '))));\n};\n\n_s(PostCard, \"GudHAjmORetKd/dGHg+lRyIOgFE=\", false, function () {\n  return [useCardStyles, useTheme, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/PostCard.js"],"names":["React","useSelector","useDispatch","Link","RouterLink","UpvoteButton","DownvoteButton","notify","EditDeleteMenu","getEditedThumbail","trimLink","prettifyLink","fixUrl","TimeAgo","getErrorMsg","Paper","Typography","useMediaQuery","CardMedia","Button","useCardStyles","useTheme","MessageIcon","LinkIcon","OpenInNewIcon","CommentIcon","PostCard","post","toggleUpvote","toggleDownvote","id","title","postType","textSubmission","linkSubmission","imageSubmission","subreddit","author","upvotedBy","downvotedBy","pointsCount","commentCount","createdAt","updatedAt","classes","theme","isMobile","breakpoints","down","dispatch","user","darkMode","state","isUpvoted","includes","isDownvoted","handleUpvoteToggle","updatedUpvotedBy","filter","u","updatedDownvotedBy","d","err","handleDownvoteToggle","linkToShow","imageLink","formattedLink","border","borderRadius","marginBottom","display","justifyContent","alignItems","width","textAligne","height","flexDirection","username","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { notify } from '../reducers/notificationReducer';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport getEditedThumbail from '../utils/cloudinaryTransform';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Paper,\n  Typography,\n  useMediaQuery,\n  CardMedia,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport { useCardStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LinkIcon from '@material-ui/icons/Link';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst PostCard = ({ post, toggleUpvote, toggleDownvote }) => {\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    commentCount,\n    createdAt,\n    updatedAt,\n  } = post;\n\n  const classes = useCardStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const { user, darkMode } = useSelector((state) => state);\n\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const linkToShow =\n    postType === 'Link'\n      ? linkSubmission\n      : postType === 'Image'\n      ? imageSubmission.imageLink\n      : '';\n\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\n\n  return (\n    <div\n      style={{\n        border: '1px solid #1dbf73',\n        borderRadius: '15px',\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <div\n        style={{\n          width: '80%',\n          display: 'flex',\n          textAligne: 'center',\n          justifyContent: 'space-around',\n        }}\n      >\n        <div>\n          {' '}\n          <img\n            style={{\n              width: '70px',\n              height: '70px',\n              borderRadius: '100%',\n            }}\n            src='https://99designs-blog.imgix.net/blog/wp-content/uploads/2018/09/fiverr-2018.png '\n            alt=' '\n          />{' '}\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <h1> Project </h1>\n          <p>\n            {' '}\n            {post.author.username} <em>Date : {post.createdAt} </em>{' '}\n            {console.log(post)}{' '}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}