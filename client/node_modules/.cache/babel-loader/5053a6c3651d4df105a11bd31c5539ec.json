{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Desktop/hackathon3/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from './reducers/userReducer';\nimport { fetchPosts } from './reducers/postReducer';\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\nimport { setDarkMode } from './reducers/themeReducer';\nimport { notify } from './reducers/notificationReducer';\nimport NavBar from './components/NavBar';\nimport ToastNotif from './components/ToastNotif';\nimport Routes from './Routes';\nimport getErrorMsg from './utils/getErrorMsg';\nimport { Paper } from '@material-ui/core/';\nimport customTheme from './styles/customTheme';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Chat from './components/Chat/Chat';\nimport Join from './components/Join/Join';\n\nconst App = () => {\n  _s();\n\n  const classes = useMainPaperStyles();\n  const dispatch = useDispatch();\n  const {\n    darkMode\n  } = useSelector(state => state);\n  useEffect(() => {\n    const setPostsAndSubreddits = async () => {\n      try {\n        await dispatch(fetchPosts('hot'));\n        await dispatch(setSubList());\n        await dispatch(setTopSubsList());\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    dispatch(setUser());\n    dispatch(setDarkMode());\n    setPostsAndSubreddits(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: customTheme(darkMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToastNotif, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(App, \"O6Z3gKUtjX8MdGa8pbTdSR5ohTQ=\", false, function () {\n  return [useMainPaperStyles, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/wilder/Desktop/hackathon3/client/src/App.js"],"names":["React","useEffect","useDispatch","useSelector","setUser","fetchPosts","setSubList","setTopSubsList","setDarkMode","notify","NavBar","ToastNotif","Routes","getErrorMsg","Paper","customTheme","useMainPaperStyles","ThemeProvider","Chat","Join","App","classes","dispatch","darkMode","state","setPostsAndSubreddits","err","root"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,uBAA3C;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGL,kBAAkB,EAAlC;AACA,QAAMM,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAepB,WAAW,CAAEqB,KAAD,IAAWA,KAAZ,CAAhC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,qBAAqB,GAAG,YAAY;AACxC,UAAI;AACF,cAAMH,QAAQ,CAACjB,UAAU,CAAC,KAAD,CAAX,CAAd;AACA,cAAMiB,QAAQ,CAAChB,UAAU,EAAX,CAAd;AACA,cAAMgB,QAAQ,CAACf,cAAc,EAAf,CAAd;AACD,OAJD,CAIE,OAAOmB,GAAP,EAAY;AACZJ,QAAAA,QAAQ,CAACb,MAAM,CAACI,WAAW,CAACa,GAAD,CAAZ,EAAmB,OAAnB,CAAP,CAAR;AACD;AACF,KARD;;AAUAJ,IAAAA,QAAQ,CAAClB,OAAO,EAAR,CAAR;AACAkB,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AACAiB,IAAAA,qBAAqB,GAbP,CAcd;AACD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,WAAW,CAACQ,QAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,OAAO,CAACM,IAA1B;AAAgC,IAAA,SAAS,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD,CA/BD;;GAAMP,G;UACYJ,kB,EACCd,W,EACIC,W;;;KAHjBiB,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from './reducers/userReducer';\nimport { fetchPosts } from './reducers/postReducer';\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\nimport { setDarkMode } from './reducers/themeReducer';\nimport { notify } from './reducers/notificationReducer';\nimport NavBar from './components/NavBar';\nimport ToastNotif from './components/ToastNotif';\nimport Routes from './Routes';\nimport getErrorMsg from './utils/getErrorMsg';\nimport { Paper } from '@material-ui/core/';\nimport customTheme from './styles/customTheme';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Chat from './components/Chat/Chat';\nimport Join from './components/Join/Join';\n\nconst App = () => {\n  const classes = useMainPaperStyles();\n  const dispatch = useDispatch();\n  const { darkMode } = useSelector((state) => state);\n\n  useEffect(() => {\n    const setPostsAndSubreddits = async () => {\n      try {\n        await dispatch(fetchPosts('hot'));\n        await dispatch(setSubList());\n        await dispatch(setTopSubsList());\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    dispatch(setUser());\n    dispatch(setDarkMode());\n    setPostsAndSubreddits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider theme={customTheme(darkMode)}>\n      <Paper className={classes.root} elevation={0}>\n        <ToastNotif />\n        <NavBar />\n        <Routes />\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}