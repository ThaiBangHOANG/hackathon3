{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Desktop/hackathon3/client/src/components/CommentAndButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addReply, editComment, deleteComment } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useCommentAndBtnsStyles } from '../styles/muiStyles';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst CommentAndButtons = ({\n  isMobile,\n  comment,\n  postId,\n  user\n}) => {\n  _s();\n\n  const classes = useCommentAndBtnsStyles();\n  const dispatch = useDispatch();\n  const [replyOpen, setReplyOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [replyInput, setReplyInput] = useState('');\n  const [editInput, setEditInput] = useState(comment.commentBody);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handlePostReply = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(addReply(postId, comment.id, replyInput));\n      setSubmitting(false);\n      setReplyOpen(false);\n      setReplyInput('');\n      dispatch(notify(`Reply submitted!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleEditComment = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(editComment(postId, comment.id, editInput));\n      setSubmitting(false);\n      setEditOpen(false);\n      dispatch(notify(`Comment edited!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleCommentDelete = async () => {\n    try {\n      await dispatch(deleteComment(postId, comment.id));\n      dispatch(notify(`Comment deleted!`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, !editOpen ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, comment.commentBody) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    fullWidth: true,\n    rows: 2,\n    rowsMax: Infinity,\n    value: editInput,\n    onChange: e => setEditInput(e.target.value),\n    variant: \"outlined\",\n    size: isMobile ? 'small' : 'medium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setEditOpen(false),\n    color: \"primary\",\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.cancelBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEditComment,\n    color: \"primary\",\n    variant: \"contained\",\n    startIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }\n    }),\n    size: \"small\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, submitting ? 'Updating' : 'Update'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.btnBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, user && /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"inherit\",\n    startIcon: /*#__PURE__*/React.createElement(ReplyIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 24\n      }\n    }),\n    className: classes.btnStyle,\n    onClick: () => setReplyOpen(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Reply\"), user && user.id === comment.commentedBy.id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"inherit\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 26\n      }\n    }),\n    className: classes.btnStyle,\n    onClick: () => setEditOpen(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DeleteDialog, {\n    type: \"comment\",\n    handleDelete: handleCommentDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }))), replyOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: `Reply to ${comment.commentedBy.username}'s comment`,\n    multiline: true,\n    required: true,\n    fullWidth: true,\n    rows: 4,\n    rowsMax: Infinity,\n    value: replyInput,\n    onChange: e => setReplyInput(e.target.value),\n    variant: \"outlined\",\n    size: isMobile ? 'small' : 'medium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setReplyOpen(false),\n    color: \"primary\",\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.cancelBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePostReply,\n    color: \"primary\",\n    variant: \"contained\",\n    startIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 26\n      }\n    }),\n    size: \"small\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, submitting ? 'Replying' : 'Reply'))));\n};\n\n_s(CommentAndButtons, \"5rP07Cr1uvefwJXGWjr8TRyHD18=\", false, function () {\n  return [useCommentAndBtnsStyles, useDispatch];\n});\n\n_c = CommentAndButtons;\nexport default CommentAndButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentAndButtons\");","map":{"version":3,"sources":["/home/wilder/Desktop/hackathon3/client/src/components/CommentAndButtons.js"],"names":["React","useState","useDispatch","addReply","editComment","deleteComment","notify","DeleteDialog","getErrorMsg","TextField","Button","Typography","useCommentAndBtnsStyles","ReplyIcon","SendIcon","EditIcon","CommentAndButtons","isMobile","comment","postId","user","classes","dispatch","replyOpen","setReplyOpen","editOpen","setEditOpen","replyInput","setReplyInput","editInput","setEditInput","commentBody","submitting","setSubmitting","handlePostReply","id","err","handleEditComment","handleCommentDelete","inputDiv","Infinity","e","target","value","submitBtns","cancelBtn","btnBar","btnStyle","prevState","commentedBy","username"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  addReply,\n  editComment,\n  deleteComment,\n} from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useCommentAndBtnsStyles } from '../styles/muiStyles';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst CommentAndButtons = ({ isMobile, comment, postId, user }) => {\n  const classes = useCommentAndBtnsStyles();\n  const dispatch = useDispatch();\n  const [replyOpen, setReplyOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [replyInput, setReplyInput] = useState('');\n  const [editInput, setEditInput] = useState(comment.commentBody);\n  const [submitting, setSubmitting] = useState(false);\n\n  const handlePostReply = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(addReply(postId, comment.id, replyInput));\n      setSubmitting(false);\n      setReplyOpen(false);\n      setReplyInput('');\n      dispatch(notify(`Reply submitted!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleEditComment = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(editComment(postId, comment.id, editInput));\n      setSubmitting(false);\n      setEditOpen(false);\n      dispatch(notify(`Comment edited!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleCommentDelete = async () => {\n    try {\n      await dispatch(deleteComment(postId, comment.id));\n      dispatch(notify(`Comment deleted!`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <div>\n      {!editOpen ? (\n        <Typography variant=\"body2\">{comment.commentBody}</Typography>\n      ) : (\n        <div className={classes.inputDiv}>\n          <TextField\n            multiline\n            fullWidth\n            rows={2}\n            rowsMax={Infinity}\n            value={editInput}\n            onChange={(e) => setEditInput(e.target.value)}\n            variant=\"outlined\"\n            size={isMobile ? 'small' : 'medium'}\n          />\n          <div className={classes.submitBtns}>\n            <Button\n              onClick={() => setEditOpen(false)}\n              color=\"primary\"\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.cancelBtn}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleEditComment}\n              color=\"primary\"\n              variant=\"contained\"\n              startIcon={<SendIcon />}\n              size=\"small\"\n              disabled={submitting}\n            >\n              {submitting ? 'Updating' : 'Update'}\n            </Button>\n          </div>\n        </div>\n      )}\n      <div className={classes.btnBar}>\n        {user && (\n          <Button\n            size=\"small\"\n            color=\"inherit\"\n            startIcon={<ReplyIcon />}\n            className={classes.btnStyle}\n            onClick={() => setReplyOpen((prevState) => !prevState)}\n          >\n            Reply\n          </Button>\n        )}\n        {user && user.id === comment.commentedBy.id && (\n          <>\n            <Button\n              size=\"small\"\n              color=\"inherit\"\n              startIcon={<EditIcon />}\n              className={classes.btnStyle}\n              onClick={() => setEditOpen((prevState) => !prevState)}\n            >\n              Edit\n            </Button>\n            <DeleteDialog type=\"comment\" handleDelete={handleCommentDelete} />\n          </>\n        )}\n      </div>\n      {replyOpen && (\n        <div className={classes.inputDiv}>\n          <TextField\n            placeholder={`Reply to ${comment.commentedBy.username}'s comment`}\n            multiline\n            required\n            fullWidth\n            rows={4}\n            rowsMax={Infinity}\n            value={replyInput}\n            onChange={(e) => setReplyInput(e.target.value)}\n            variant=\"outlined\"\n            size={isMobile ? 'small' : 'medium'}\n          />\n          <div className={classes.submitBtns}>\n            <Button\n              onClick={() => setReplyOpen(false)}\n              color=\"primary\"\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.cancelBtn}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handlePostReply}\n              color=\"primary\"\n              variant=\"contained\"\n              startIcon={<SendIcon />}\n              size=\"small\"\n              disabled={submitting}\n            >\n              {submitting ? 'Replying' : 'Reply'}\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommentAndButtons;\n"]},"metadata":{},"sourceType":"module"}