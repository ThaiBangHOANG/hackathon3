{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Desktop/hackathon3/client/src/components/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser, loadUserPosts } from '../reducers/userPageReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\nimport UserPostCard from './UserPostCard';\nimport ErrorPage from './ErrorPage';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Container, Paper, useMediaQuery, Typography, Avatar } from '@material-ui/core';\nimport { useUserPageStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPage = () => {\n  _s();\n\n  const classes = useUserPageStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const {\n    username\n  } = useParams();\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state.userPage);\n  const user = useSelector(state => state.user);\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [pageError, setPageError] = useState(null);\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        await dispatch(fetchUser(username));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err), 'error');\n      }\n    };\n\n    getUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username]);\n\n  if (pageError) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(ErrorPage, {\n          errorMsg: pageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!userInfo || pageLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        className: classes.mainPaper,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          text: \"Fetching user data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    avatar,\n    username: userName,\n    createdAt,\n    posts,\n    totalComments,\n    karmaPoints\n  } = userInfo.userDetails;\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadUserPosts(username, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    disableGutters: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.userInfoWrapper,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.avatarWrapper,\n          children: [avatar && avatar.exists ? /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: userName,\n            src: getCircularAvatar(avatar.imageLink),\n            className: classes.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              backgroundColor: '#941a1c'\n            },\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: userName[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"secondary\",\n            children: [\"u/\", userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.rightWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.itemWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.twoItemsDiv,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"secondary\",\n                children: \"Cake Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"secondary\",\n                className: classes.cakeDay,\n                children: [/*#__PURE__*/_jsxDEV(CakeIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), String(new Date(createdAt)).split(' ').slice(1, 4).join(' ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.twoItemsDiv,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: posts.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), \" Posts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: totalComments\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), \" Comments\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.itemWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.twoItemsDiv,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"secondary\",\n                children: \"Karma\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"secondary\",\n                children: karmaPoints.commentKarma + karmaPoints.postKarma\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.twoItemsDiv,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"secondary\",\n                children: [\"Post Karma \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: karmaPoints.postKarma\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"secondary\",\n                children: [\"Comment Karma \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: karmaPoints.commentKarma\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postsPaper,\n        children: userInfo.posts.results.length !== 0 ? userInfo.posts.results.map(p => /*#__PURE__*/_jsxDEV(UserPostCard, {\n          post: p,\n          user: user,\n          isMobile: isMobile\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.noPosts,\n          children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"u/\", userName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), \" has not made any posts yet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), 'next' in userInfo.posts && /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n        handleLoadPosts: handleLoadPosts,\n        loading: loadingMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPage, \"J4BGvGUkpBU05UT2XS1fU2MRjHg=\", false, function () {\n  return [useUserPageStyles, useTheme, useMediaQuery, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/home/wilder/Desktop/hackathon3/client/src/components/UserPage.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","fetchUser","loadUserPosts","notify","getCircularAvatar","UserPostCard","ErrorPage","LoadMoreButton","LoadingSpinner","getErrorMsg","Container","Paper","useMediaQuery","Typography","Avatar","useUserPageStyles","useTheme","CakeIcon","PersonIcon","UserPage","classes","theme","isMobile","breakpoints","down","username","dispatch","userInfo","state","userPage","user","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","pageError","setPageError","getUser","err","mainPaper","avatar","userName","createdAt","posts","totalComments","karmaPoints","userDetails","handleLoadPosts","prevState","userInfoWrapper","avatarWrapper","exists","imageLink","backgroundColor","rightWrapper","itemWrapper","twoItemsDiv","cakeDay","String","Date","split","slice","join","length","commentKarma","postKarma","postsPaper","results","map","p","id","noPosts"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser, loadUserPosts } from '../reducers/userPageReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\nimport UserPostCard from './UserPostCard';\nimport ErrorPage from './ErrorPage';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Container,\n  Paper,\n  useMediaQuery,\n  Typography,\n  Avatar,\n} from '@material-ui/core';\nimport { useUserPageStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst UserPage = () => {\n  const classes = useUserPageStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const { username } = useParams();\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.userPage);\n  const user = useSelector((state) => state.user);\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [pageError, setPageError] = useState(null);\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        await dispatch(fetchUser(username));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err), 'error');\n      }\n    };\n    getUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username]);\n\n  if (pageError) {\n    return (\n      <Container disableGutters>\n        <Paper variant='outlined' className={classes.mainPaper}>\n          <ErrorPage errorMsg={pageError} />\n        </Paper>\n      </Container>\n    );\n  }\n\n  if (!userInfo || pageLoading) {\n    return (\n      <Container disableGutters>\n        <Paper variant='outlined' className={classes.mainPaper}>\n          <LoadingSpinner text='Fetching user data...' />\n        </Paper>\n      </Container>\n    );\n  }\n\n  const {\n    avatar,\n    username: userName,\n    createdAt,\n    posts,\n    totalComments,\n    karmaPoints,\n  } = userInfo.userDetails;\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadUserPosts(username, page + 1));\n      setPage((prevState) => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <Container disableGutters>\n      <Paper variant='outlined' className={classes.mainPaper}>\n        <Paper className={classes.userInfoWrapper} variant='outlined'>\n          <div className={classes.avatarWrapper}>\n            {avatar && avatar.exists ? (\n              <Avatar\n                alt={userName}\n                src={getCircularAvatar(avatar.imageLink)}\n                className={classes.avatar}\n              />\n            ) : (\n              <Avatar\n                style={{ backgroundColor: '#941a1c' }}\n                className={classes.avatar}\n              >\n                <h1>{userName[0]}</h1>\n              </Avatar>\n            )}\n            <Typography variant='h6' color='secondary'>\n              u/{userName}\n            </Typography>\n          </div>\n          <div className={classes.rightWrapper}>\n            <div className={classes.itemWrapper}>\n              <div className={classes.twoItemsDiv}>\n                <Typography variant='body1' color='secondary'>\n                  Cake Day\n                </Typography>\n                <Typography\n                  variant='h6'\n                  color='secondary'\n                  className={classes.cakeDay}\n                >\n                  <CakeIcon />\n                  {String(new Date(createdAt)).split(' ').slice(1, 4).join(' ')}\n                </Typography>\n              </div>\n              <div className={classes.twoItemsDiv}>\n                <Typography variant='body1' color='secondary'>\n                  <strong>{posts.length}</strong> Posts\n                </Typography>\n                <Typography variant='body1' color='secondary'>\n                  <strong>{totalComments}</strong> Comments\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.itemWrapper}>\n              <div className={classes.twoItemsDiv}>\n                <Typography variant='body1' color='secondary'>\n                  Karma\n                </Typography>\n                <Typography variant='h6' color='secondary'>\n                  {karmaPoints.commentKarma + karmaPoints.postKarma}\n                </Typography>\n              </div>\n              <div className={classes.twoItemsDiv}>\n                <Typography variant='body1' color='secondary'>\n                  Post Karma <strong>{karmaPoints.postKarma}</strong>\n                </Typography>\n                <Typography variant='body1' color='secondary'>\n                  Comment Karma <strong>{karmaPoints.commentKarma}</strong>\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Paper>\n        <div className={classes.postsPaper}>\n          {userInfo.posts.results.length !== 0 ? (\n            userInfo.posts.results.map((p) => (\n              <UserPostCard\n                key={p.id}\n                post={p}\n                user={user}\n                isMobile={isMobile}\n              />\n            ))\n          ) : (\n            <div className={classes.noPosts}>\n              <PersonIcon color='primary' fontSize='large' />\n              <Typography variant='h5' color='secondary'>\n                <strong>u/{userName}</strong> has not made any posts yet\n              </Typography>\n            </div>\n          )}\n        </div>\n        {'next' in userInfo.posts && (\n          <LoadMoreButton\n            handleLoadPosts={handleLoadPosts}\n            loading={loadingMore}\n          />\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default UserPage;\n"]},"metadata":{},"sourceType":"module"}