{"ast":null,"code":"var _jsxFileName = \"/home/wilder/hacka3/hackathon3/client/src/components/SubPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSub, toggleUpvote, toggleDownvote, toggleSubscribe, editDescription, loadSubPosts } from '../reducers/subPageReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport SortTabBar from './SortTabBar';\nimport PostCard from './PostCard';\nimport LoadMoreButton from './LoadMoreButton';\nimport PostFormModal from './PostFormModal';\nimport ErrorPage from './ErrorPage';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Container, Paper, Typography, Button, Link, TextField } from '@material-ui/core';\nimport { useSubPageStyles } from '../styles/muiStyles';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CheckIcon from '@material-ui/icons/Check';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\n\nconst SubPage = () => {\n  _s();\n\n  const classes = useSubPageStyles();\n  const {\n    sub\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    user,\n    subPage\n  } = useSelector(state => state);\n  const [editOpen, setEditOpen] = useState(false);\n  const [descInput, setDescInput] = useState('');\n  const [sortBy, setSortBy] = useState('hot');\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [postsLoading, setPostsLoading] = useState(false);\n  const [pageError, setPageError] = useState(null);\n  useEffect(() => {\n    const getSub = async () => {\n      try {\n        await dispatch(fetchSub(sub, 'hot'));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err));\n      }\n    };\n\n    getSub(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sub]);\n  useEffect(() => {\n    if (subPage) {\n      setDescInput(subPage.subDetails.description);\n    }\n  }, [subPage]);\n\n  if (pageError) {\n    return /*#__PURE__*/React.createElement(Container, {\n      disableGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ErrorPage, {\n      errorMsg: pageError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  if (!subPage || pageLoading) {\n    return /*#__PURE__*/React.createElement(Container, {\n      disableGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      text: 'Fetching sub data...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  const {\n    subredditName,\n    subscribedBy,\n    subscriberCount,\n    description,\n    admin,\n    createdAt,\n    id\n  } = subPage.subDetails;\n  const isSubscribed = user && subscribedBy.includes(user.id);\n\n  const handleSubJoin = async () => {\n    try {\n      let updatedSubscribedBy = [];\n\n      if (isSubscribed) {\n        updatedSubscribedBy = subscribedBy.filter(s => s !== user.id);\n      } else {\n        updatedSubscribedBy = [...subscribedBy, user.id];\n      }\n\n      await dispatch(toggleSubscribe(id, updatedSubscribedBy));\n      let message = isSubscribed ? `Unsubscribed from r/${subredditName}` : `Subscribed to r/${subredditName}!`;\n      dispatch(notify(message, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleEditDescription = async () => {\n    try {\n      await dispatch(editDescription(id, descInput));\n      setEditOpen(false);\n      dispatch(notify(`Updated description of your sub: r/${subredditName}`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleTabChange = async (e, newValue) => {\n    try {\n      setPostsLoading(true);\n      await dispatch(fetchSub(sub, newValue));\n      setSortBy(newValue);\n      setPostsLoading(false);\n\n      if (page !== 1) {\n        setPage(1);\n      }\n    } catch (err) {\n      setPostsLoading(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadSubPosts(sub, sortBy, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.mainPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.subInfoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.firstPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"r/\", subredditName), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, !editOpen ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, description) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    required: true,\n    fullWidth: true,\n    rows: 2,\n    rowsMax: Infinity,\n    value: descInput,\n    onChange: e => setDescInput(e.target.value),\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setEditOpen(false),\n    color: \"primary\",\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.cancelBtn,\n    style: {\n      padding: '0.2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEditDescription,\n    color: \"primary\",\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      padding: '0.2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"Update\"))), user && user.id === admin.id && !editOpen && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setEditOpen(prevState => !prevState),\n    size: \"small\",\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      padding: '0.2em',\n      marginLeft: '0.5em'\n    },\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.iconText,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CakeIcon, {\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }), \" Created\", ' ' + String(new Date(createdAt)).split(' ').slice(1, 4).join(' ')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"secondary\",\n    className: classes.iconText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }), \"Admin:\", /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: `/u/${admin.username}`,\n    style: {\n      marginLeft: '0.3em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, \"u/\", admin.username))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.secondPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, user && /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    startIcon: isSubscribed ? /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 43\n      }\n    }) : /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 59\n      }\n    }),\n    className: classes.joinBtn,\n    onClick: handleSubJoin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, isSubscribed ? 'Subscribed' : 'Subscribe'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    className: classes.iconText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GroupIcon, {\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }), subscriberCount, \" subscribers\"))), /*#__PURE__*/React.createElement(PostFormModal, {\n    fromSubreddit: {\n      subredditName,\n      id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SortTabBar, {\n    sortBy: sortBy,\n    handleTabChange: handleTabChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }), postsLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    text: 'Fetching subreddit posts...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, subPage.posts.results.length !== 0 ? subPage.posts.results.map(p => /*#__PURE__*/React.createElement(PostCard, {\n    key: p.id,\n    post: p,\n    toggleUpvote: toggleUpvote,\n    toggleDownvote: toggleDownvote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PostAddIcon, {\n    color: \"primary\",\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, \"No Posts Yet\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, \"Be the first one to post in r/\", subredditName, \"!\"))), 'next' in subPage.posts && /*#__PURE__*/React.createElement(LoadMoreButton, {\n    handleLoadPosts: handleLoadPosts,\n    loading: loadingMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }))));\n};\n\n_s(SubPage, \"Yn7SgTh91zVSbrONHEKolLhuhUw=\", false, function () {\n  return [useSubPageStyles, useParams, useDispatch, useSelector];\n});\n\n_c = SubPage;\nexport default SubPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubPage\");","map":{"version":3,"sources":["/home/wilder/hacka3/hackathon3/client/src/components/SubPage.js"],"names":["React","useState","useEffect","useParams","Link","RouterLink","useDispatch","useSelector","fetchSub","toggleUpvote","toggleDownvote","toggleSubscribe","editDescription","loadSubPosts","notify","SortTabBar","PostCard","LoadMoreButton","PostFormModal","ErrorPage","LoadingSpinner","getErrorMsg","Container","Paper","Typography","Button","TextField","useSubPageStyles","CakeIcon","PersonIcon","CheckIcon","GroupIcon","AddIcon","EditIcon","PostAddIcon","SubPage","classes","sub","dispatch","user","subPage","state","editOpen","setEditOpen","descInput","setDescInput","sortBy","setSortBy","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","postsLoading","setPostsLoading","pageError","setPageError","getSub","err","subDetails","description","mainPaper","subredditName","subscribedBy","subscriberCount","admin","createdAt","id","isSubscribed","includes","handleSubJoin","updatedSubscribedBy","filter","s","message","handleEditDescription","handleTabChange","e","newValue","handleLoadPosts","prevState","subInfoWrapper","firstPanel","inputDiv","Infinity","target","value","submitBtns","cancelBtn","padding","marginLeft","iconText","marginRight","String","Date","split","slice","join","username","secondPanel","joinBtn","posts","results","length","map","p","noPosts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchSub,\n  toggleUpvote,\n  toggleDownvote,\n  toggleSubscribe,\n  editDescription,\n  loadSubPosts,\n} from '../reducers/subPageReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport SortTabBar from './SortTabBar';\nimport PostCard from './PostCard';\nimport LoadMoreButton from './LoadMoreButton';\nimport PostFormModal from './PostFormModal';\nimport ErrorPage from './ErrorPage';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Container,\n  Paper,\n  Typography,\n  Button,\n  Link,\n  TextField,\n} from '@material-ui/core';\nimport { useSubPageStyles } from '../styles/muiStyles';\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CheckIcon from '@material-ui/icons/Check';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\n\nconst SubPage = () => {\n  const classes = useSubPageStyles();\n  const { sub } = useParams();\n  const dispatch = useDispatch();\n  const { user, subPage } = useSelector((state) => state);\n  const [editOpen, setEditOpen] = useState(false);\n  const [descInput, setDescInput] = useState('');\n  const [sortBy, setSortBy] = useState('hot');\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [postsLoading, setPostsLoading] = useState(false);\n  const [pageError, setPageError] = useState(null);\n\n  useEffect(() => {\n    const getSub = async () => {\n      try {\n        await dispatch(fetchSub(sub, 'hot'));\n        setPageLoading(false);\n      } catch (err) {\n        setPageError(getErrorMsg(err));\n      }\n    };\n    getSub();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sub]);\n\n  useEffect(() => {\n    if (subPage) {\n      setDescInput(subPage.subDetails.description);\n    }\n  }, [subPage]);\n\n  if (pageError) {\n    return (\n      <Container disableGutters>\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\n          <ErrorPage errorMsg={pageError} />\n        </Paper>\n      </Container>\n    );\n  }\n\n  if (!subPage || pageLoading) {\n    return (\n      <Container disableGutters>\n        <Paper variant=\"outlined\" className={classes.mainPaper}>\n          <LoadingSpinner text={'Fetching sub data...'} />\n        </Paper>\n      </Container>\n    );\n  }\n\n  const {\n    subredditName,\n    subscribedBy,\n    subscriberCount,\n    description,\n    admin,\n    createdAt,\n    id,\n  } = subPage.subDetails;\n\n  const isSubscribed = user && subscribedBy.includes(user.id);\n\n  const handleSubJoin = async () => {\n    try {\n      let updatedSubscribedBy = [];\n\n      if (isSubscribed) {\n        updatedSubscribedBy = subscribedBy.filter((s) => s !== user.id);\n      } else {\n        updatedSubscribedBy = [...subscribedBy, user.id];\n      }\n      await dispatch(toggleSubscribe(id, updatedSubscribedBy));\n\n      let message = isSubscribed\n        ? `Unsubscribed from r/${subredditName}`\n        : `Subscribed to r/${subredditName}!`;\n      dispatch(notify(message, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleEditDescription = async () => {\n    try {\n      await dispatch(editDescription(id, descInput));\n      setEditOpen(false);\n      dispatch(\n        notify(`Updated description of your sub: r/${subredditName}`, 'success')\n      );\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleTabChange = async (e, newValue) => {\n    try {\n      setPostsLoading(true);\n      await dispatch(fetchSub(sub, newValue));\n      setSortBy(newValue);\n      setPostsLoading(false);\n\n      if (page !== 1) {\n        setPage(1);\n      }\n    } catch (err) {\n      setPostsLoading(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadSubPosts(sub, sortBy, page + 1));\n      setPage((prevState) => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <Container disableGutters>\n      <Paper variant=\"outlined\" className={classes.mainPaper}>\n        <Paper variant=\"outlined\" className={classes.subInfoWrapper}>\n          <div className={classes.firstPanel}>\n            <Typography variant=\"h6\" color=\"secondary\">\n              r/{subredditName}\n            </Typography>\n            <div className={classes.description}>\n              {!editOpen ? (\n                <Typography variant=\"body1\">{description}</Typography>\n              ) : (\n                <div className={classes.inputDiv}>\n                  <TextField\n                    multiline\n                    required\n                    fullWidth\n                    rows={2}\n                    rowsMax={Infinity}\n                    value={descInput}\n                    onChange={(e) => setDescInput(e.target.value)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                  />\n                  <div className={classes.submitBtns}>\n                    <Button\n                      onClick={() => setEditOpen(false)}\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      className={classes.cancelBtn}\n                      style={{ padding: '0.2em' }}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={handleEditDescription}\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      style={{ padding: '0.2em' }}\n                    >\n                      Update\n                    </Button>\n                  </div>\n                </div>\n              )}\n              {user && user.id === admin.id && !editOpen && (\n                <Button\n                  onClick={() => setEditOpen((prevState) => !prevState)}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  style={{ padding: '0.2em', marginLeft: '0.5em' }}\n                  startIcon={<EditIcon />}\n                >\n                  Edit\n                </Button>\n              )}\n            </div>\n            <Typography\n              variant=\"body2\"\n              className={classes.iconText}\n              color=\"secondary\"\n            >\n              <CakeIcon style={{ marginRight: 5 }} /> Created\n              {' ' +\n                String(new Date(createdAt)).split(' ').slice(1, 4).join(' ')}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"secondary\"\n              className={classes.iconText}\n            >\n              <PersonIcon style={{ marginRight: 5 }} />\n              Admin:\n              <Link\n                component={RouterLink}\n                to={`/u/${admin.username}`}\n                style={{ marginLeft: '0.3em' }}\n              >\n                u/{admin.username}\n              </Link>\n            </Typography>\n          </div>\n          <div className={classes.secondPanel}>\n            {user && (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={isSubscribed ? <CheckIcon /> : <AddIcon />}\n                className={classes.joinBtn}\n                onClick={handleSubJoin}\n              >\n                {isSubscribed ? 'Subscribed' : 'Subscribe'}\n              </Button>\n            )}\n            <Typography\n              variant=\"body2\"\n              color=\"primary\"\n              className={classes.iconText}\n            >\n              <GroupIcon style={{ marginRight: 5 }} />\n              {subscriberCount} subscribers\n            </Typography>\n          </div>\n        </Paper>\n        <PostFormModal fromSubreddit={{ subredditName, id }} />\n        <SortTabBar sortBy={sortBy} handleTabChange={handleTabChange} />\n        {postsLoading ? (\n          <LoadingSpinner text={'Fetching subreddit posts...'} />\n        ) : (\n          <>\n            <div>\n              {subPage.posts.results.length !== 0 ? (\n                subPage.posts.results.map((p) => (\n                  <PostCard\n                    key={p.id}\n                    post={p}\n                    toggleUpvote={toggleUpvote}\n                    toggleDownvote={toggleDownvote}\n                  />\n                ))\n              ) : (\n                <div className={classes.noPosts}>\n                  <PostAddIcon color=\"primary\" fontSize=\"large\" />\n                  <Typography variant=\"h5\" color=\"secondary\">\n                    No Posts Yet\n                  </Typography>\n                  <Typography variant=\"h6\" color=\"secondary\">\n                    Be the first one to post in r/{subredditName}!\n                  </Typography>\n                </div>\n              )}\n            </div>\n            {'next' in subPage.posts && (\n              <LoadMoreButton\n                handleLoadPosts={handleLoadPosts}\n                loading={loadingMore}\n              />\n            )}\n          </>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SubPage;\n"]},"metadata":{},"sourceType":"module"}