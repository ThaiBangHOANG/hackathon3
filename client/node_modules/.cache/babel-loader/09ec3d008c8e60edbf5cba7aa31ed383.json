{"ast":null,"code":"var _jsxFileName = \"/home/tb/hackathon3/client/src/components/SubFormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SubForm from './SubForm';\nimport { DialogTitle } from './CustomDialogTitle';\nimport { Dialog, DialogContent, Button, MenuItem, ListItemIcon } from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubFormModal = ({\n  type,\n  handleCloseMenu\n}) => {\n  _s();\n\n  const classes = useDialogStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenMenu = () => {\n    handleClickOpen();\n    handleCloseMenu();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [type !== 'menu' ? /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: handleClickOpen,\n      fullWidth: true,\n      className: classes.createSubBtn,\n      size: \"large\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }, this),\n      children: \"Create New Subreddish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: handleOpenMenu,\n      children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          style: {\n            marginRight: 7\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \"Create Subreddish\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"sm\",\n      classes: {\n        paper: classes.dialogWrapper\n      },\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: handleClose,\n        children: \"Create a new subreddish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(SubForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubFormModal, \"yRoeU9ME0yvosxnbLAKruFwWOT0=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c = SubFormModal;\nexport default SubFormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubFormModal\");","map":{"version":3,"sources":["/home/tb/hackathon3/client/src/components/SubFormModal.js"],"names":["React","useState","SubForm","DialogTitle","Dialog","DialogContent","Button","MenuItem","ListItemIcon","useDialogStyles","AddCircleIcon","SubFormModal","type","handleCloseMenu","classes","open","setOpen","handleClickOpen","handleClose","handleOpenMenu","createSubBtn","marginRight","paper","dialogWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,YALF,QAMO,mBANP;AAOA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA+B;AAAA;;AAClD,QAAMC,OAAO,GAAGL,eAAe,EAA/B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMgB,eAAe,GAAG,MAAM;AAC5BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAG,MAAM;AAC3BF,IAAAA,eAAe;AACfJ,IAAAA,eAAe;AAChB,GAHD;;AAKA,sBACE;AAAA,eACGD,IAAI,KAAK,MAAT,gBACC,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAEK,eAHX;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,EAAEH,OAAO,CAACM,YALrB;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,SAAS,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAaC,QAAC,QAAD;AAAU,MAAA,OAAO,EAAED,cAAnB;AAAA,6BACE,QAAC,YAAD;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE;AAAEE,YAAAA,WAAW,EAAE;AAAf;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ,eAqBE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,OAAO,EAAEG,WAFX;AAGE,MAAA,QAAQ,EAAC,IAHX;AAIE,MAAA,OAAO,EAAE;AAAEI,QAAAA,KAAK,EAAER,OAAO,CAACS;AAAjB,OAJX;AAKE,MAAA,SAAS,MALX;AAAA,8BAOE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEL,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,aAAD;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CArDD;;GAAMP,Y;UACYF,e;;;KADZE,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport SubForm from './SubForm';\n\nimport { DialogTitle } from './CustomDialogTitle';\nimport {\n  Dialog,\n  DialogContent,\n  Button,\n  MenuItem,\n  ListItemIcon,\n} from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst SubFormModal = ({ type, handleCloseMenu }) => {\n  const classes = useDialogStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenMenu = () => {\n    handleClickOpen();\n    handleCloseMenu();\n  };\n\n  return (\n    <div>\n      {type !== 'menu' ? (\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={handleClickOpen}\n          fullWidth\n          className={classes.createSubBtn}\n          size='large'\n          startIcon={<AddCircleIcon />}\n        >\n          Create New Subreddish\n        </Button>\n      ) : (\n        <MenuItem onClick={handleOpenMenu}>\n          <ListItemIcon>\n            <AddCircleIcon style={{ marginRight: 7 }} />\n            Create Subreddish\n          </ListItemIcon>\n        </MenuItem>\n      )}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth='sm'\n        classes={{ paper: classes.dialogWrapper }}\n        fullWidth\n      >\n        <DialogTitle onClose={handleClose}>Create a new subreddish</DialogTitle>\n        <DialogContent>\n          <SubForm />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SubFormModal;\n"]},"metadata":{},"sourceType":"module"}