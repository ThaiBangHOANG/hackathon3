{"ast":null,"code":"var _jsxFileName = \"/home/tb/hackathon3/client/src/components/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { logoutUser } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport MobileUserMenu from './MobileUserMenu';\nimport DesktopUserMenu from './DesktopUserMenu';\nimport SearchBar from './SearchBar';\nimport { AppBar, Toolbar, Typography, Link, Button, useMediaQuery, IconButton } from '@material-ui/core';\nimport { useNavStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  _s();\n\n  const [searchOpen, setSearchOpen] = useState(false);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const classes = useNavStyles();\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    dispatch(notify(`u/${user.username} logged out`, 'success'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"sticky\",\n    color: \"inherit\",\n    elevation: 1,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      disableGutters: isMobile,\n      children: [!searchOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.leftPortion,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logoWrapper,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: classes.logo,\n              color: \"primary\",\n              component: RouterLink,\n              to: \"/\",\n              startIcon: /*#__PURE__*/_jsxDEV(RedditIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 30\n              }, this),\n              size: \"large\",\n              children: \"Trois moustiquos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"secondary\",\n              children: [\"Made with \", /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                style: {\n                  fontSize: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), \" by\", /*#__PURE__*/_jsxDEV(Link, {\n                href: 'https://github.com/ThaiBangHOANG',\n                color: \"inherit\",\n                target: \"_blank\",\n                rel: \"noopener\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: ` trois mousquetaires`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), !isMobile && /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            className: classes.searchBtn,\n            onClick: () => setSearchOpen(prevState => !prevState),\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MobileUserMenu, {\n            user: user,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(DesktopUserMenu, {\n          user: user,\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), searchOpen && isMobile && /*#__PURE__*/_jsxDEV(SearchBar, {\n        isMobile: true,\n        setSearchOpen: setSearchOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"nwgScoXs1NZeY/Uy5QNjfv9pK64=\", false, function () {\n  return [useSelector, useDispatch, useTheme, useMediaQuery, useNavStyles];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/tb/hackathon3/client/src/components/NavBar.js"],"names":["React","useState","useDispatch","useSelector","Link","RouterLink","logoutUser","notify","MobileUserMenu","DesktopUserMenu","SearchBar","AppBar","Toolbar","Typography","Button","useMediaQuery","IconButton","useNavStyles","useTheme","RedditIcon","FavoriteIcon","SearchIcon","NavBar","searchOpen","setSearchOpen","user","state","dispatch","theme","isMobile","breakpoints","down","classes","handleLogout","username","leftPortion","logoWrapper","logo","fontSize","searchBtn","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { logoutUser } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport MobileUserMenu from './MobileUserMenu';\nimport DesktopUserMenu from './DesktopUserMenu';\nimport SearchBar from './SearchBar';\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Link,\n  Button,\n  useMediaQuery,\n  IconButton,\n} from '@material-ui/core';\nimport { useNavStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst NavBar = () => {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const classes = useNavStyles();\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    dispatch(notify(`u/${user.username} logged out`, 'success'));\n  };\n\n  return (\n    <AppBar position='sticky' color='inherit' elevation={1}>\n      <Toolbar disableGutters={isMobile}>\n        {!searchOpen && (\n          <>\n            <div className={classes.leftPortion}>\n              <div className={classes.logoWrapper}>\n                <Button\n                  className={classes.logo}\n                  color='primary'\n                  component={RouterLink}\n                  to='/'\n                  startIcon={<RedditIcon fontSize='large' />}\n                  size='large'\n                >\n                  Trois moustiquos\n                </Button>\n                <Typography variant='caption' color='secondary'>\n                  Made with <FavoriteIcon style={{ fontSize: 12 }} /> by\n                  <Link\n                    href={'https://github.com/ThaiBangHOANG'}\n                    color='inherit'\n                    target='_blank'\n                    rel='noopener'\n                  >\n                    <strong>{` trois mousquetaires`}</strong>\n                  </Link>\n                </Typography>\n              </div>\n              {!isMobile && <SearchBar />}\n            </div>\n            {isMobile ? (\n              <>\n                <IconButton\n                  color='primary'\n                  className={classes.searchBtn}\n                  onClick={() => setSearchOpen((prevState) => !prevState)}\n                >\n                  <SearchIcon />\n                </IconButton>\n                <MobileUserMenu user={user} handleLogout={handleLogout} />\n              </>\n            ) : (\n              <DesktopUserMenu user={user} handleLogout={handleLogout} />\n            )}\n          </>\n        )}\n        {searchOpen && isMobile && (\n          <SearchBar isMobile={true} setSearchOpen={setSearchOpen} />\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}