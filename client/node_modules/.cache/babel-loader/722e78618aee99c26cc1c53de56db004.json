{"ast":null,"code":"var _jsxFileName = \"/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { logoutUser } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport MobileUserMenu from './MobileUserMenu';\nimport DesktopUserMenu from './DesktopUserMenu';\nimport SearchBar from './SearchBar';\nimport { AppBar, Toolbar, Typography, Link, Button, useMediaQuery, IconButton } from '@material-ui/core';\nimport { useNavStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst NavBar = () => {\n  _s();\n\n  const [searchOpen, setSearchOpen] = useState(false);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const classes = useNavStyles();\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    dispatch(notify(`u/${user.username} logged out`, 'success'));\n  };\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"sticky\",\n    color: \"inherit\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    disableGutters: isMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, !searchOpen && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.leftPortion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.logo,\n    color: \"primary\",\n    component: RouterLink,\n    to: \"/\",\n    startIcon: /*#__PURE__*/React.createElement(RedditIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 30\n      }\n    }),\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"reddish\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Made with \", /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }), \" by\", /*#__PURE__*/React.createElement(Link, {\n    href: 'https://github.com/amand33p',\n    color: \"inherit\",\n    target: \"_blank\",\n    rel: \"noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, ` amand33p`)))), !isMobile && /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  })), isMobile ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    className: classes.searchBtn,\n    onClick: () => setSearchOpen(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(MobileUserMenu, {\n    user: user,\n    handleLogout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(DesktopUserMenu, {\n    user: user,\n    handleLogout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })), searchOpen && isMobile && /*#__PURE__*/React.createElement(SearchBar, {\n    isMobile: true,\n    setSearchOpen: setSearchOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(NavBar, \"nwgScoXs1NZeY/Uy5QNjfv9pK64=\", false, function () {\n  return [useSelector, useDispatch, useTheme, useMediaQuery, useNavStyles];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/NavBar.js"],"names":["React","useState","useDispatch","useSelector","Link","RouterLink","logoutUser","notify","MobileUserMenu","DesktopUserMenu","SearchBar","AppBar","Toolbar","Typography","Button","useMediaQuery","IconButton","useNavStyles","useTheme","RedditIcon","FavoriteIcon","SearchIcon","NavBar","searchOpen","setSearchOpen","user","state","dispatch","theme","isMobile","breakpoints","down","classes","handleLogout","username","leftPortion","logoWrapper","logo","fontSize","searchBtn","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { logoutUser } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport MobileUserMenu from './MobileUserMenu';\nimport DesktopUserMenu from './DesktopUserMenu';\nimport SearchBar from './SearchBar';\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Link,\n  Button,\n  useMediaQuery,\n  IconButton,\n} from '@material-ui/core';\nimport { useNavStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst NavBar = () => {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const classes = useNavStyles();\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n    dispatch(notify(`u/${user.username} logged out`, 'success'));\n  };\n\n  return (\n    <AppBar position=\"sticky\" color=\"inherit\" elevation={1}>\n      <Toolbar disableGutters={isMobile}>\n        {!searchOpen && (\n          <>\n            <div className={classes.leftPortion}>\n              <div className={classes.logoWrapper}>\n                <Button\n                  className={classes.logo}\n                  color=\"primary\"\n                  component={RouterLink}\n                  to=\"/\"\n                  startIcon={<RedditIcon fontSize=\"large\" />}\n                  size=\"large\"\n                >\n                  reddish\n                </Button>\n                <Typography variant=\"caption\" color=\"secondary\">\n                  Made with <FavoriteIcon style={{ fontSize: 12 }} /> by\n                  <Link\n                    href={'https://github.com/amand33p'}\n                    color=\"inherit\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <strong>{` amand33p`}</strong>\n                  </Link>\n                </Typography>\n              </div>\n              {!isMobile && <SearchBar />}\n            </div>\n            {isMobile ? (\n              <>\n                <IconButton\n                  color=\"primary\"\n                  className={classes.searchBtn}\n                  onClick={() => setSearchOpen((prevState) => !prevState)}\n                >\n                  <SearchIcon />\n                </IconButton>\n                <MobileUserMenu user={user} handleLogout={handleLogout} />\n              </>\n            ) : (\n              <DesktopUserMenu user={user} handleLogout={handleLogout} />\n            )}\n          </>\n        )}\n        {searchOpen && isMobile && (\n          <SearchBar isMobile={true} setSearchOpen={setSearchOpen} />\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}