{"ast":null,"code":"var _jsxFileName = \"/home/wilder/hacka3/hackathon3/client/src/components/ReplyAndButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editReply, deleteReply } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useCommentAndBtnsStyles } from '../styles/muiStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst ReplyAndButtons = ({\n  isMobile,\n  reply,\n  postId,\n  commentId,\n  user\n}) => {\n  _s();\n\n  const [editOpen, setEditOpen] = useState(false);\n  const [editInput, setEditInput] = useState(reply.replyBody);\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useCommentAndBtnsStyles();\n\n  const handleEditReply = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(editReply(postId, commentId, reply.id, editInput));\n      setSubmitting(false);\n      setEditOpen(false);\n      dispatch(notify(`Reply edited!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleReplyDelete = async () => {\n    try {\n      await dispatch(deleteReply(postId, commentId, reply.id));\n      dispatch(notify(`Reply deleted!`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, !editOpen ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, reply.replyBody) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    required: true,\n    fullWidth: true,\n    rows: 2,\n    rowsMax: Infinity,\n    value: editInput,\n    onChange: e => setEditInput(e.target.value),\n    variant: \"outlined\",\n    size: isMobile ? 'small' : 'medium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setEditOpen(false),\n    color: \"primary\",\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.cancelBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEditReply,\n    color: \"primary\",\n    variant: \"contained\",\n    startIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }\n    }),\n    size: \"small\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, submitting ? 'Updating' : 'Update'))), user && user.id === reply.repliedBy.id && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.btnBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"inherit\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 24\n      }\n    }),\n    className: classes.btnStyle,\n    onClick: () => setEditOpen(prevState => !prevState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DeleteDialog, {\n    type: \"comment\",\n    handleDelete: handleReplyDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(ReplyAndButtons, \"v/kHY3EwBkFJAzaSmp0L1I5dMDc=\", false, function () {\n  return [useDispatch, useCommentAndBtnsStyles];\n});\n\n_c = ReplyAndButtons;\nexport default ReplyAndButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyAndButtons\");","map":{"version":3,"sources":["/home/wilder/hacka3/hackathon3/client/src/components/ReplyAndButtons.js"],"names":["React","useState","useDispatch","editReply","deleteReply","notify","DeleteDialog","getErrorMsg","TextField","Button","Typography","useCommentAndBtnsStyles","SendIcon","EditIcon","ReplyAndButtons","isMobile","reply","postId","commentId","user","editOpen","setEditOpen","editInput","setEditInput","replyBody","submitting","setSubmitting","dispatch","classes","handleEditReply","id","err","handleReplyDelete","inputDiv","Infinity","e","target","value","submitBtns","cancelBtn","repliedBy","btnBar","btnStyle","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editReply, deleteReply } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport DeleteDialog from './DeleteDialog';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useCommentAndBtnsStyles } from '../styles/muiStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst ReplyAndButtons = ({ isMobile, reply, postId, commentId, user }) => {\n  const [editOpen, setEditOpen] = useState(false);\n  const [editInput, setEditInput] = useState(reply.replyBody);\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useCommentAndBtnsStyles();\n\n  const handleEditReply = async () => {\n    try {\n      setSubmitting(true);\n      await dispatch(editReply(postId, commentId, reply.id, editInput));\n      setSubmitting(false);\n      setEditOpen(false);\n      dispatch(notify(`Reply edited!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleReplyDelete = async () => {\n    try {\n      await dispatch(deleteReply(postId, commentId, reply.id));\n      dispatch(notify(`Reply deleted!`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <div>\n      {!editOpen ? (\n        <Typography variant=\"body2\">{reply.replyBody}</Typography>\n      ) : (\n        <div className={classes.inputDiv}>\n          <TextField\n            multiline\n            required\n            fullWidth\n            rows={2}\n            rowsMax={Infinity}\n            value={editInput}\n            onChange={(e) => setEditInput(e.target.value)}\n            variant=\"outlined\"\n            size={isMobile ? 'small' : 'medium'}\n          />\n          <div className={classes.submitBtns}>\n            <Button\n              onClick={() => setEditOpen(false)}\n              color=\"primary\"\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.cancelBtn}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleEditReply}\n              color=\"primary\"\n              variant=\"contained\"\n              startIcon={<SendIcon />}\n              size=\"small\"\n              disabled={submitting}\n            >\n              {submitting ? 'Updating' : 'Update'}\n            </Button>\n          </div>\n        </div>\n      )}\n      {user && user.id === reply.repliedBy.id && (\n        <div className={classes.btnBar}>\n          <Button\n            size=\"small\"\n            color=\"inherit\"\n            startIcon={<EditIcon />}\n            className={classes.btnStyle}\n            onClick={() => setEditOpen((prevState) => !prevState)}\n          >\n            Edit\n          </Button>\n          <DeleteDialog type=\"comment\" handleDelete={handleReplyDelete} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ReplyAndButtons;\n"]},"metadata":{},"sourceType":"module"}