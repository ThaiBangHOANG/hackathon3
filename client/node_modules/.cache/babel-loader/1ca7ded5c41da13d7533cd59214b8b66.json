{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Desktop/hackathon3/client/src/components/CommentsDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport CommentsAndButtons from './CommentAndButtons';\nimport ReplyAndButtons from './ReplyAndButtons';\nimport { toggleCommentUpvote, toggleCommentDownvote, toggleReplyUpvote, toggleReplyDownvote } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Typography, Link } from '@material-ui/core';\nimport { usePostCommentsStyles } from '../styles/muiStyles';\nimport ForumIcon from '@material-ui/icons/Forum';\n\nconst CommentsDisplay = ({\n  comments,\n  postId,\n  isMobile\n}) => {\n  _s();\n\n  const classes = usePostCommentsStyles();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const handleCommentUpvote = async commentId => {\n    const {\n      upvotedBy,\n      downvotedBy\n    } = comments.find(c => c.id === commentId);\n\n    try {\n      if (upvotedBy.includes(user.id)) {\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleCommentUpvote(postId, commentId, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleCommentUpvote(postId, commentId, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleCommentDownvote = async commentId => {\n    const {\n      upvotedBy,\n      downvotedBy\n    } = comments.find(c => c.id === commentId);\n\n    try {\n      if (downvotedBy.includes(user.id)) {\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleCommentDownvote(postId, commentId, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleCommentDownvote(postId, commentId, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleReplyUpvote = async (commentId, replyId) => {\n    const targetComment = comments.find(c => c.id === commentId);\n    const {\n      upvotedBy,\n      downvotedBy\n    } = targetComment.replies.find(r => r.id === replyId);\n\n    try {\n      if (upvotedBy.includes(user.id)) {\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleReplyUpvote(postId, commentId, replyId, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleReplyUpvote(postId, commentId, replyId, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleReplyDownvote = async (commentId, replyId) => {\n    const targetComment = comments.find(c => c.id === commentId);\n    const {\n      upvotedBy,\n      downvotedBy\n    } = targetComment.replies.find(r => r.id === replyId);\n\n    try {\n      if (downvotedBy.includes(user.id)) {\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleReplyDownvote(postId, commentId, replyId, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleReplyDownvote(postId, commentId, replyId, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const commentDetails = (by, comment) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      component: RouterLink,\n      to: `/u/${by.username}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, by.username), ` ${comment.pointsCount} ${comment.pointsCount === 1 ? 'point' : 'points'} • `, /*#__PURE__*/React.createElement(TimeAgo, {\n      datetime: new Date(comment.createdAt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), comment.createdAt !== comment.updatedAt && /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, ' • edited', \" \", /*#__PURE__*/React.createElement(TimeAgo, {\n      datetime: new Date(comment.updatedAt),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, comments.length !== 0 ? comments.map(c => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.id,\n    className: classes.wholeComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentVotesWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UpvoteButton, {\n    user: user,\n    body: c,\n    handleUpvote: () => handleCommentUpvote(c.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DownvoteButton, {\n    user: user,\n    body: c,\n    handleDownvote: () => handleCommentDownvote(c.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, commentDetails(c.commentedBy, c), /*#__PURE__*/React.createElement(CommentsAndButtons, {\n    isMobile: isMobile,\n    comment: c,\n    postId: postId,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }))), c.replies.map(r => /*#__PURE__*/React.createElement(\"div\", {\n    key: r.id,\n    className: classes.replyWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentVotesWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UpvoteButton, {\n    user: user,\n    body: r,\n    handleUpvote: () => handleReplyUpvote(c.id, r.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DownvoteButton, {\n    user: user,\n    body: r,\n    handleDownvote: () => handleReplyDownvote(c.id, r.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, commentDetails(r.repliedBy, r), /*#__PURE__*/React.createElement(ReplyAndButtons, {\n    isMobile: isMobile,\n    reply: r,\n    postId: postId,\n    commentId: c.id,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noCommentsBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ForumIcon, {\n    color: \"green\",\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"No Comments Yet\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, \"Be the first to share what you think!\")));\n};\n\n_s(CommentsDisplay, \"tDNmiZacjOtXmIdpJFvInw2MFD0=\", false, function () {\n  return [usePostCommentsStyles, useDispatch, useSelector];\n});\n\n_c = CommentsDisplay;\nexport default CommentsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsDisplay\");","map":{"version":3,"sources":["/home/wilder/Desktop/hackathon3/client/src/components/CommentsDisplay.js"],"names":["React","useSelector","useDispatch","Link","RouterLink","UpvoteButton","DownvoteButton","CommentsAndButtons","ReplyAndButtons","toggleCommentUpvote","toggleCommentDownvote","toggleReplyUpvote","toggleReplyDownvote","notify","TimeAgo","getErrorMsg","Typography","usePostCommentsStyles","ForumIcon","CommentsDisplay","comments","postId","isMobile","classes","dispatch","user","state","handleCommentUpvote","commentId","upvotedBy","downvotedBy","find","c","id","includes","updatedUpvotedBy","filter","u","updatedDownvotedBy","d","err","handleCommentDownvote","handleReplyUpvote","replyId","targetComment","replies","r","handleReplyDownvote","commentDetails","by","comment","username","pointsCount","Date","createdAt","updatedAt","commentsContainer","length","map","wholeComment","commentWrapper","commentVotesWrapper","commentedBy","replyWrapper","repliedBy","noCommentsBanner"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport CommentsAndButtons from './CommentAndButtons';\nimport ReplyAndButtons from './ReplyAndButtons';\nimport {\n  toggleCommentUpvote,\n  toggleCommentDownvote,\n  toggleReplyUpvote,\n  toggleReplyDownvote,\n} from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { Typography, Link } from '@material-ui/core';\nimport { usePostCommentsStyles } from '../styles/muiStyles';\nimport ForumIcon from '@material-ui/icons/Forum';\n\nconst CommentsDisplay = ({ comments, postId, isMobile }) => {\n  const classes = usePostCommentsStyles();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  const handleCommentUpvote = async (commentId) => {\n    const { upvotedBy, downvotedBy } = comments.find((c) => c.id === commentId);\n\n    try {\n      if (upvotedBy.includes(user.id)) {\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(\n          toggleCommentUpvote(postId, commentId, updatedUpvotedBy, downvotedBy)\n        );\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(\n          toggleCommentUpvote(\n            postId,\n            commentId,\n            updatedUpvotedBy,\n            updatedDownvotedBy\n          )\n        );\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleCommentDownvote = async (commentId) => {\n    const { upvotedBy, downvotedBy } = comments.find((c) => c.id === commentId);\n\n    try {\n      if (downvotedBy.includes(user.id)) {\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(\n          toggleCommentDownvote(\n            postId,\n            commentId,\n            updatedDownvotedBy,\n            upvotedBy\n          )\n        );\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(\n          toggleCommentDownvote(\n            postId,\n            commentId,\n            updatedDownvotedBy,\n            updatedUpvotedBy\n          )\n        );\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleReplyUpvote = async (commentId, replyId) => {\n    const targetComment = comments.find((c) => c.id === commentId);\n    const { upvotedBy, downvotedBy } = targetComment.replies.find(\n      (r) => r.id === replyId\n    );\n\n    try {\n      if (upvotedBy.includes(user.id)) {\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(\n          toggleReplyUpvote(\n            postId,\n            commentId,\n            replyId,\n            updatedUpvotedBy,\n            downvotedBy\n          )\n        );\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(\n          toggleReplyUpvote(\n            postId,\n            commentId,\n            replyId,\n            updatedUpvotedBy,\n            updatedDownvotedBy\n          )\n        );\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleReplyDownvote = async (commentId, replyId) => {\n    const targetComment = comments.find((c) => c.id === commentId);\n    const { upvotedBy, downvotedBy } = targetComment.replies.find(\n      (r) => r.id === replyId\n    );\n\n    try {\n      if (downvotedBy.includes(user.id)) {\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(\n          toggleReplyDownvote(\n            postId,\n            commentId,\n            replyId,\n            updatedDownvotedBy,\n            upvotedBy\n          )\n        );\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(\n          toggleReplyDownvote(\n            postId,\n            commentId,\n            replyId,\n            updatedDownvotedBy,\n            updatedUpvotedBy\n          )\n        );\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const commentDetails = (by, comment) => {\n    return (\n      <>\n        <Typography variant='caption'>\n          <Link component={RouterLink} to={`/u/${by.username}`}>\n            {by.username}\n          </Link>\n          {` ${comment.pointsCount} ${\n            comment.pointsCount === 1 ? 'point' : 'points'\n          } • `}\n          <TimeAgo datetime={new Date(comment.createdAt)} />\n          {comment.createdAt !== comment.updatedAt && (\n            <em>\n              {' • edited'} <TimeAgo datetime={new Date(comment.updatedAt)} />\n            </em>\n          )}\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <div className={classes.commentsContainer}>\n      {comments.length !== 0 ? (\n        comments.map((c) => (\n          <div key={c.id} className={classes.wholeComment}>\n            <div className={classes.commentWrapper}>\n              <div className={classes.commentVotesWrapper}>\n                <UpvoteButton\n                  user={user}\n                  body={c}\n                  handleUpvote={() => handleCommentUpvote(c.id)}\n                />\n                <DownvoteButton\n                  user={user}\n                  body={c}\n                  handleDownvote={() => handleCommentDownvote(c.id)}\n                />\n              </div>\n              <div className={classes.commentDetails}>\n                {commentDetails(c.commentedBy, c)}\n                <CommentsAndButtons\n                  isMobile={isMobile}\n                  comment={c}\n                  postId={postId}\n                  user={user}\n                />\n              </div>\n            </div>\n            {c.replies.map((r) => (\n              <div key={r.id} className={classes.replyWrapper}>\n                <div className={classes.commentVotesWrapper}>\n                  <UpvoteButton\n                    user={user}\n                    body={r}\n                    handleUpvote={() => handleReplyUpvote(c.id, r.id)}\n                  />\n                  <DownvoteButton\n                    user={user}\n                    body={r}\n                    handleDownvote={() => handleReplyDownvote(c.id, r.id)}\n                  />\n                </div>\n                <div className={classes.commentDetails}>\n                  {commentDetails(r.repliedBy, r)}\n                  <ReplyAndButtons\n                    isMobile={isMobile}\n                    reply={r}\n                    postId={postId}\n                    commentId={c.id}\n                    user={user}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        ))\n      ) : (\n        <div className={classes.noCommentsBanner}>\n          <ForumIcon color='green' fontSize='large' />\n          <Typography variant='h5' color='secondary'>\n            No Comments Yet\n          </Typography>\n          <Typography variant='h6' color='secondary'>\n            Be the first to share what you think!\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommentsDisplay;\n"]},"metadata":{},"sourceType":"module"}