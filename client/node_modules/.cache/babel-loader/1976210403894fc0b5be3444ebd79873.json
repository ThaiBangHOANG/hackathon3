{"ast":null,"code":"var _jsxFileName = \"/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearchResults, toggleUpvote, toggleDownvote, loadSearchPosts } from '../reducers/searchReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport PostCard from './PostCard';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport { useSearchPageStyles } from '../styles/muiStyles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\n\nconst SearchResults = () => {\n  _s();\n\n  const classes = useSearchPageStyles();\n  const {\n    query\n  } = useParams();\n  const dispatch = useDispatch();\n  const searchResults = useSelector(state => state.search);\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  useEffect(() => {\n    const getSearchResults = async () => {\n      try {\n        setPageLoading(true);\n        await dispatch(setSearchResults(query));\n        setPageLoading(false);\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    getSearchResults();\n    setPage(1); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  if (!searchResults || pageLoading) {\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        display: 'none'\n      },\n      disableGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: classes.mainPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      text: 'Searching for matches...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadSearchPosts(query, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.mainPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"secondary\",\n    className: classes.infoPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    fontSize: \"large\",\n    style: {\n      marginRight: '7px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), \"Showing search results for \\\"\", query, \"\\\"\")), searchResults.results.length !== 0 ? searchResults.results.map(s => /*#__PURE__*/React.createElement(PostCard, {\n    key: s.id,\n    post: s,\n    toggleUpvote: toggleUpvote,\n    toggleDownvote: toggleDownvote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.noResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SentimentVeryDissatisfiedIcon, {\n    className: classes.sorryIcon,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), \"Sorry, there were no post results for \\\"\", query, \"\\\"\"), 'next' in searchResults && /*#__PURE__*/React.createElement(LoadMoreButton, {\n    handleLoadPosts: handleLoadPosts,\n    loading: loadingMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(SearchResults, \"1+EzdZn6aX2I5i+gR9CXg/QmiXY=\", false, function () {\n  return [useSearchPageStyles, useParams, useDispatch, useSelector];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/SearchResults.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","setSearchResults","toggleUpvote","toggleDownvote","loadSearchPosts","notify","PostCard","LoadMoreButton","LoadingSpinner","getErrorMsg","Container","Paper","Typography","useSearchPageStyles","SearchIcon","SentimentVeryDissatisfiedIcon","SearchResults","classes","query","dispatch","searchResults","state","search","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","getSearchResults","err","display","mainPaper","handleLoadPosts","prevState","infoPaper","marginRight","results","length","map","s","id","noResults","sorryIcon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setSearchResults,\n  toggleUpvote,\n  toggleDownvote,\n  loadSearchPosts,\n} from '../reducers/searchReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport PostCard from './PostCard';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport { useSearchPageStyles } from '../styles/muiStyles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\n\nconst SearchResults = () => {\n  const classes = useSearchPageStyles();\n  const { query } = useParams();\n  const dispatch = useDispatch();\n  const searchResults = useSelector((state) => state.search);\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n\n  useEffect(() => {\n    const getSearchResults = async () => {\n      try {\n        setPageLoading(true);\n        await dispatch(setSearchResults(query));\n        setPageLoading(false);\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n    getSearchResults();\n    setPage(1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  if (!searchResults || pageLoading) {\n    return (\n      <Container style={{ display: 'none' }} disableGutters>\n        <Paper variant='outlined' className={classes.mainPaper}>\n          <LoadingSpinner text={'Searching for matches...'} />\n        </Paper>\n      </Container>\n    );\n  }\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadSearchPosts(query, page + 1));\n      setPage((prevState) => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <Container disableGutters>\n      <Paper variant='outlined' className={classes.mainPaper}>\n        <Paper variant='outlined'>\n          <Typography\n            variant='h6'\n            color='secondary'\n            className={classes.infoPaper}\n          >\n            <SearchIcon fontSize='large' style={{ marginRight: '7px' }} />\n            Showing search results for \"{query}\"\n          </Typography>\n        </Paper>\n        {searchResults.results.length !== 0 ? (\n          searchResults.results.map((s) => (\n            <PostCard\n              key={s.id}\n              post={s}\n              toggleUpvote={toggleUpvote}\n              toggleDownvote={toggleDownvote}\n            />\n          ))\n        ) : (\n          <Typography variant='h5' className={classes.noResults}>\n            <SentimentVeryDissatisfiedIcon\n              className={classes.sorryIcon}\n              color='primary'\n            />\n            Sorry, there were no post results for \"{query}\"\n          </Typography>\n        )}\n        {'next' in searchResults && (\n          <LoadMoreButton\n            handleLoadPosts={handleLoadPosts}\n            loading={loadingMore}\n          />\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SearchResults;\n"]},"metadata":{},"sourceType":"module"}