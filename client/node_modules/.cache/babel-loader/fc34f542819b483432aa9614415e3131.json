{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Desktop/hackathon3/client/src/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { notify } from '../reducers/notificationReducer';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport getEditedThumbail from '../utils/cloudinaryTransform';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Paper, Typography, useMediaQuery, CardMedia, Link, Button } from '@material-ui/core';\nimport { useCardStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LinkIcon from '@material-ui/icons/Link';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst PostCard = ({\n  post,\n  toggleUpvote,\n  toggleDownvote\n}) => {\n  _s();\n\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    commentCount,\n    createdAt,\n    updatedAt\n  } = post;\n  const classes = useCardStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const {\n    user,\n    darkMode\n  } = useSelector(state => state);\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter(d => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter(u => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const linkToShow = postType === 'Link' ? linkSubmission : postType === 'Image' ? imageSubmission.imageLink : '';\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.votesWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UpvoteButton, {\n    user: user,\n    body: post,\n    handleUpvote: handleUpvoteToggle,\n    size: isMobile ? 'small' : 'medium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      color: isUpvoted ? '#FF8b60' : isDownvoted ? '#9494FF' : darkMode ? '#e4e4e4' : '#333',\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, pointsCount), /*#__PURE__*/React.createElement(DownvoteButton, {\n    user: user,\n    body: post,\n    handleDownvote: handleDownvoteToggle,\n    size: isMobile ? 'small' : 'medium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.thumbnailWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, postType === 'Text' ? /*#__PURE__*/React.createElement(RouterLink, {\n    to: `/comments/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MessageIcon, {\n    fontSize: \"inherit\",\n    className: classes.thumbnailIcon,\n    style: {\n      color: '#787878'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }))) : postType === 'Link' ? /*#__PURE__*/React.createElement(\"a\", {\n    href: fixUrl(linkSubmission),\n    target: \"_noblank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinkIcon, {\n    fontSize: \"inherit\",\n    className: classes.thumbnailIcon,\n    style: {\n      color: '#787878'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    className: classes.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.thumbnail,\n    image: getEditedThumbail(imageSubmission.imageLink),\n    title: title,\n    component: \"a\",\n    href: imageSubmission.imageLink,\n    target: \"_noblank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.postInfoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, title, ' ', /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"primary\",\n    className: classes.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: postType === 'Link' ? fixUrl(linkSubmission) : postType === 'Image' ? imageSubmission.imageLink : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, formattedLink, postType === 'Text' ? null : /*#__PURE__*/React.createElement(OpenInNewIcon, {\n    fontSize: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: `/r/${subreddit.subredditName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"r/\", subreddit.subredditName), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    className: classes.userAndDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Posted by\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: `/u/${author.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"u/\", author.username), ' ', \"\\u2022 \", /*#__PURE__*/React.createElement(TimeAgo, {\n    datetime: new Date(createdAt),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }), createdAt !== updatedAt && '*')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(CommentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 24\n      }\n    }),\n    className: classes.commentsBtn,\n    component: RouterLink,\n    to: `/comments/${id}`,\n    size: isMobile ? 'small' : 'medium',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, commentCount, \" comments\"), user && user.id === author.id && /*#__PURE__*/React.createElement(EditDeleteMenu, {\n    id: id,\n    isMobile: isMobile,\n    title: title,\n    postType: postType,\n    subreddit: subreddit,\n    textSubmission: textSubmission,\n    linkSubmission: linkSubmission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(PostCard, \"GudHAjmORetKd/dGHg+lRyIOgFE=\", false, function () {\n  return [useCardStyles, useTheme, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/home/wilder/Desktop/hackathon3/client/src/components/PostCard.js"],"names":["React","useSelector","useDispatch","Link","RouterLink","UpvoteButton","DownvoteButton","notify","EditDeleteMenu","getEditedThumbail","trimLink","prettifyLink","fixUrl","TimeAgo","getErrorMsg","Paper","Typography","useMediaQuery","CardMedia","Button","useCardStyles","useTheme","MessageIcon","LinkIcon","OpenInNewIcon","CommentIcon","PostCard","post","toggleUpvote","toggleDownvote","id","title","postType","textSubmission","linkSubmission","imageSubmission","subreddit","author","upvotedBy","downvotedBy","pointsCount","commentCount","createdAt","updatedAt","classes","theme","isMobile","breakpoints","down","dispatch","user","darkMode","state","isUpvoted","includes","isDownvoted","handleUpvoteToggle","updatedUpvotedBy","filter","u","updatedDownvotedBy","d","err","handleDownvoteToggle","linkToShow","imageLink","formattedLink","root","votesWrapper","color","fontWeight","thumbnailWrapper","thumbnail","thumbnailIcon","postInfoWrapper","url","subredditName","userAndDate","username","Date","bottomBtns","commentsBtn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { notify } from '../reducers/notificationReducer';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport getEditedThumbail from '../utils/cloudinaryTransform';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Paper,\n  Typography,\n  useMediaQuery,\n  CardMedia,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport { useCardStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LinkIcon from '@material-ui/icons/Link';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst PostCard = ({ post, toggleUpvote, toggleDownvote }) => {\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    commentCount,\n    createdAt,\n    updatedAt,\n  } = post;\n\n  const classes = useCardStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const { user, darkMode } = useSelector((state) => state);\n\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const linkToShow =\n    postType === 'Link'\n      ? linkSubmission\n      : postType === 'Image'\n      ? imageSubmission.imageLink\n      : '';\n\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\n\n  return (\n    <Paper className={classes.root} variant=\"outlined\">\n      <div className={classes.votesWrapper}>\n        <UpvoteButton\n          user={user}\n          body={post}\n          handleUpvote={handleUpvoteToggle}\n          size={isMobile ? 'small' : 'medium'}\n        />\n        <Typography\n          variant=\"body1\"\n          style={{\n            color: isUpvoted\n              ? '#FF8b60'\n              : isDownvoted\n              ? '#9494FF'\n              : darkMode\n              ? '#e4e4e4'\n              : '#333',\n            fontWeight: 600,\n          }}\n        >\n          {pointsCount}\n        </Typography>\n        <DownvoteButton\n          user={user}\n          body={post}\n          handleDownvote={handleDownvoteToggle}\n          size={isMobile ? 'small' : 'medium'}\n        />\n      </div>\n      <div className={classes.thumbnailWrapper}>\n        {postType === 'Text' ? (\n          <RouterLink to={`/comments/${id}`}>\n            <Paper elevation={0} square className={classes.thumbnail}>\n              <MessageIcon\n                fontSize=\"inherit\"\n                className={classes.thumbnailIcon}\n                style={{ color: '#787878' }}\n              />\n            </Paper>\n          </RouterLink>\n        ) : postType === 'Link' ? (\n          <a href={fixUrl(linkSubmission)} target=\"_noblank\">\n            <Paper elevation={0} square className={classes.thumbnail}>\n              <LinkIcon\n                fontSize=\"inherit\"\n                className={classes.thumbnailIcon}\n                style={{ color: '#787878' }}\n              />\n            </Paper>\n          </a>\n        ) : (\n          <Paper elevation={0} square className={classes.thumbnail}>\n            <CardMedia\n              className={classes.thumbnail}\n              image={getEditedThumbail(imageSubmission.imageLink)}\n              title={title}\n              component=\"a\"\n              href={imageSubmission.imageLink}\n              target=\"_noblank\"\n            />\n          </Paper>\n        )}\n      </div>\n      <div className={classes.postInfoWrapper}>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}{' '}\n          <Typography variant=\"caption\" color=\"primary\" className={classes.url}>\n            <Link\n              href={\n                postType === 'Link'\n                  ? fixUrl(linkSubmission)\n                  : postType === 'Image'\n                  ? imageSubmission.imageLink\n                  : ''\n              }\n            >\n              {formattedLink}\n              {postType === 'Text' ? null : (\n                <OpenInNewIcon fontSize=\"inherit\" />\n              )}\n            </Link>\n          </Typography>\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          <Link component={RouterLink} to={`/r/${subreddit.subredditName}`}>\n            r/{subreddit.subredditName}\n          </Link>\n          <Typography variant=\"caption\" className={classes.userAndDate}>\n            Posted by{' '}\n            <Link component={RouterLink} to={`/u/${author.username}`}>\n              u/{author.username}\n            </Link>{' '}\n            • <TimeAgo datetime={new Date(createdAt)} />\n            {createdAt !== updatedAt && '*'}\n          </Typography>\n        </Typography>\n        <div className={classes.bottomBtns}>\n          <Button\n            startIcon={<CommentIcon />}\n            className={classes.commentsBtn}\n            component={RouterLink}\n            to={`/comments/${id}`}\n            size={isMobile ? 'small' : 'medium'}\n          >\n            {commentCount} comments\n          </Button>\n          {user && user.id === author.id && (\n            <EditDeleteMenu\n              id={id}\n              isMobile={isMobile}\n              title={title}\n              postType={postType}\n              subreddit={subreddit}\n              textSubmission={textSubmission}\n              linkSubmission={linkSubmission}\n            />\n          )}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}