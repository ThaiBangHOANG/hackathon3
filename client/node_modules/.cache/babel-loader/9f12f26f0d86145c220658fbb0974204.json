{"ast":null,"code":"var _jsxFileName = \"/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/PostFormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PostForm from './PostForm';\nimport HideOnScroll from './HideOnScroll';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\nimport { DialogTitle, DialogContent } from './CustomDialogTitle';\nimport { Dialog, Button, Fab, IconButton, Paper, Avatar, useMediaQuery, MenuItem, ListItemIcon } from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst AddPostModal = ({\n  actionType,\n  handleMenuClose,\n  postToEditType,\n  postToEditTitle,\n  postToEditSub,\n  postToEditId,\n  textSubmission,\n  linkSubmission,\n  fromSubreddit\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [postType, setPostType] = useState('Text');\n  const user = useSelector(state => state.user);\n  const classes = useDialogStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTextPost = () => {\n    setPostType('Text');\n    handleClickOpen();\n  };\n\n  const handleImagePost = () => {\n    setPostType('Image');\n    handleClickOpen();\n  };\n\n  const handleLinkPost = () => {\n    setPostType('Link');\n    handleClickOpen();\n  };\n\n  const handleMenuClick = () => {\n    handleClickOpen();\n    handleMenuClose();\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \" Hi there \"));\n};\n\n_s(AddPostModal, \"Je691RC1NK/sfwgkxyyRWMf+giQ=\", false, function () {\n  return [useSelector, useDialogStyles, useTheme, useMediaQuery];\n});\n\n_c = AddPostModal;\nexport default AddPostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostModal\");","map":{"version":3,"sources":["/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/PostFormModal.js"],"names":["React","useState","useSelector","PostForm","HideOnScroll","getCircularAvatar","DialogTitle","DialogContent","Dialog","Button","Fab","IconButton","Paper","Avatar","useMediaQuery","MenuItem","ListItemIcon","useDialogStyles","useTheme","PostAddIcon","ImageIcon","LinkIcon","EditIcon","AddPostModal","actionType","handleMenuClose","postToEditType","postToEditTitle","postToEditSub","postToEditId","textSubmission","linkSubmission","fromSubreddit","open","setOpen","postType","setPostType","user","state","classes","theme","isMobile","breakpoints","down","handleClickOpen","handleClose","handleTextPost","handleImagePost","handleLinkPost","handleMenuClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,qBAA3C;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,GAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,aAPF,EAQEC,QARF,EASEC,YATF,QAUO,mBAVP;AAWA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,UADoB;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,cAHoB;AAIpBC,EAAAA,eAJoB;AAKpBC,EAAAA,aALoB;AAMpBC,EAAAA,YANoB;AAOpBC,EAAAA,cAPoB;AAQpBC,EAAAA,cARoB;AASpBC,EAAAA;AAToB,CAAD,KAUf;AAAA;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,MAAD,CAAxC;AACA,QAAMoC,IAAI,GAAGnC,WAAW,CAAEoC,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,QAAME,OAAO,GAAGtB,eAAe,EAA/B;AACA,QAAMuB,KAAK,GAAGtB,QAAQ,EAAtB;AACA,QAAMuB,QAAQ,GAAG3B,aAAa,CAAC0B,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMW,WAAW,GAAG,MAAM;AACxBX,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMY,cAAc,GAAG,MAAM;AAC3BV,IAAAA,WAAW,CAAC,MAAD,CAAX;AACAQ,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC5BX,IAAAA,WAAW,CAAC,OAAD,CAAX;AACAQ,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMI,cAAc,GAAG,MAAM;AAC3BZ,IAAAA,WAAW,CAAC,MAAD,CAAX;AACAQ,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMK,eAAe,GAAG,MAAM;AAC5BL,IAAAA,eAAe;AACfnB,IAAAA,eAAe;AAChB,GAHD;;AAKA,MAAI,CAACY,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD,CAxDD;;GAAMd,Y;UAaSrB,W,EAEGe,e,EACFC,Q,EACGJ,a;;;KAjBbS,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PostForm from './PostForm';\nimport HideOnScroll from './HideOnScroll';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\n\nimport { DialogTitle, DialogContent } from './CustomDialogTitle';\nimport {\n  Dialog,\n  Button,\n  Fab,\n  IconButton,\n  Paper,\n  Avatar,\n  useMediaQuery,\n  MenuItem,\n  ListItemIcon,\n} from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst AddPostModal = ({\n  actionType,\n  handleMenuClose,\n  postToEditType,\n  postToEditTitle,\n  postToEditSub,\n  postToEditId,\n  textSubmission,\n  linkSubmission,\n  fromSubreddit,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [postType, setPostType] = useState('Text');\n  const user = useSelector((state) => state.user);\n\n  const classes = useDialogStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleTextPost = () => {\n    setPostType('Text');\n    handleClickOpen();\n  };\n\n  const handleImagePost = () => {\n    setPostType('Image');\n    handleClickOpen();\n  };\n\n  const handleLinkPost = () => {\n    setPostType('Link');\n    handleClickOpen();\n  };\n\n  const handleMenuClick = () => {\n    handleClickOpen();\n    handleMenuClose();\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1> Hi there </h1>\n    </div>\n  );\n};\n\nexport default AddPostModal;\n"]},"metadata":{},"sourceType":"module"}