{"ast":null,"code":"var _jsxFileName = \"/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts, loadMorePosts, toggleUpvote, toggleDownvote } from '../reducers/postReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport PostCard from './PostCard';\nimport SortTabBar from './SortTabBar';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\nimport { Typography } from '@material-ui/core';\nimport { usePostListStyles } from '../styles/muiStyles';\n\nconst PostList = () => {\n  _s();\n\n  const [sortBy, setSortBy] = useState('Project');\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(false);\n  const posts = useSelector(state => state.posts);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const classes = usePostListStyles();\n\n  const handleTabChange = async (e, newValue) => {\n    try {\n      setPageLoading(true);\n      await dispatch(fetchPosts(newValue));\n      setSortBy(newValue);\n      setPageLoading(false);\n\n      if (page !== 1) {\n        setPage(1);\n      }\n    } catch (err) {\n      setPageLoading(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadMorePosts(sortBy, page + 1));\n      setPage(prevState => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      setLoadingMore(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    post: post,\n    key: post.id,\n    toggleUpvote: toggleUpvote,\n    toggleDownvote: toggleDownvote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(PostList, \"dW/tanVWW7+M1tcaPvklWepvBKg=\", false, function () {\n  return [useSelector, useSelector, useDispatch, usePostListStyles];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/gasparddechirot/Documents/hackathon/hackathon3/client/src/components/PostList.js"],"names":["React","useState","useSelector","useDispatch","fetchPosts","loadMorePosts","toggleUpvote","toggleDownvote","notify","PostCard","SortTabBar","LoadMoreButton","LoadingSpinner","getErrorMsg","Typography","usePostListStyles","PostList","sortBy","setSortBy","page","setPage","loadingMore","setLoadingMore","pageLoading","setPageLoading","posts","state","user","dispatch","classes","handleTabChange","e","newValue","err","handleLoadPosts","prevState","root","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,cAJF,QAKO,yBALP;AAMA,SAASC,MAAT,QAAuB,iCAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,SAAD,CAApC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMwB,KAAK,GAAGvB,WAAW,CAAEwB,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,IAAI,GAAGzB,WAAW,CAAEwB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM0B,OAAO,GAAGd,iBAAiB,EAAjC;;AAEA,QAAMe,eAAe,GAAG,OAAOC,CAAP,EAAUC,QAAV,KAAuB;AAC7C,QAAI;AACFR,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMI,QAAQ,CAACxB,UAAU,CAAC4B,QAAD,CAAX,CAAd;AACAd,MAAAA,SAAS,CAACc,QAAD,CAAT;AACAR,MAAAA,cAAc,CAAC,KAAD,CAAd;;AAEA,UAAIL,IAAI,KAAK,CAAb,EAAgB;AACdC,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD;AACF,KATD,CASE,OAAOa,GAAP,EAAY;AACZT,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,QAAQ,CAACpB,MAAM,CAACK,WAAW,CAACoB,GAAD,CAAZ,EAAmB,OAAnB,CAAP,CAAR;AACD;AACF,GAdD;;AAgBA,QAAMC,eAAe,GAAG,YAAY;AAClC,QAAI;AACFZ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMM,QAAQ,CAACvB,aAAa,CAACY,MAAD,EAASE,IAAI,GAAG,CAAhB,CAAd,CAAd;AACAC,MAAAA,OAAO,CAAEe,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAP;AACAb,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KALD,CAKE,OAAOW,GAAP,EAAY;AACZX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAM,MAAAA,QAAQ,CAACpB,MAAM,CAACK,WAAW,CAACoB,GAAD,CAAZ,EAAmB,OAAnB,CAAP,CAAR;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACO,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACC,EAFZ;AAGE,IAAA,YAAY,EAAEhC,YAHhB;AAIE,IAAA,cAAc,EAAEC,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAhDD;;GAAMS,Q;UAKUd,W,EACDA,W,EACIC,W,EACDY,iB;;;KARZC,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchPosts,\n  loadMorePosts,\n  toggleUpvote,\n  toggleDownvote,\n} from '../reducers/postReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport PostCard from './PostCard';\nimport SortTabBar from './SortTabBar';\nimport LoadMoreButton from './LoadMoreButton';\nimport LoadingSpinner from './LoadingSpinner';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { Typography } from '@material-ui/core';\nimport { usePostListStyles } from '../styles/muiStyles';\n\nconst PostList = () => {\n  const [sortBy, setSortBy] = useState('Project');\n  const [page, setPage] = useState(1);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [pageLoading, setPageLoading] = useState(false);\n  const posts = useSelector((state) => state.posts);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const classes = usePostListStyles();\n\n  const handleTabChange = async (e, newValue) => {\n    try {\n      setPageLoading(true);\n      await dispatch(fetchPosts(newValue));\n      setSortBy(newValue);\n      setPageLoading(false);\n\n      if (page !== 1) {\n        setPage(1);\n      }\n    } catch (err) {\n      setPageLoading(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleLoadPosts = async () => {\n    try {\n      setLoadingMore(true);\n      await dispatch(loadMorePosts(sortBy, page + 1));\n      setPage((prevState) => prevState + 1);\n      setLoadingMore(false);\n    } catch (err) {\n      setLoadingMore(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <PostCard\n        post={post}\n        key={post.id}\n        toggleUpvote={toggleUpvote}\n        toggleDownvote={toggleDownvote}\n      />\n    </div>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}